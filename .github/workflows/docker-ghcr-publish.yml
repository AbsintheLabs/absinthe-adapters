name: Build & Push Docker Images to GHCR

on:
  push:
    branches: [kushagra/improvements]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    - name: Build and push all Docker images
      run: |
        # Find all Dockerfiles
        dockerfiles=$(find ops/dockerfiles -name "Dockerfile*" -type f)
        
        if [ -z "$dockerfiles" ]; then
          echo "No Dockerfiles found in ops/dockerfiles"
          exit 0
        fi
        
        # Build and push each image sequentially
        for dockerfile_path in $dockerfiles; do
          dockerfile=$(basename "$dockerfile_path")
          echo "Building $dockerfile..."
          
          # Extract image name
          if [[ "$dockerfile" == "Dockerfile" ]]; then
            image_name="main"
          else
            image_name=$(echo "$dockerfile" | sed 's/Dockerfile[.-]*//' | tr '[:upper:]' '[:lower:]')
          fi
          
          # Build and push
          docker buildx build \
            --file "$dockerfile_path" \
            --push \
            --tag "ghcr.io/absinthelabs/absinthe-${image_name}:${image_name}" \
            .
          
          echo "✅ Successfully built and pushed $image_name"
        done
  
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger deployment on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            bash /home/admin/ops/absinthe-api/deploy-absinthe.sh


    # - name: Notify Slack on Success
    #   if: success()
    #   uses: slackapi/slack-github-action@v1.27.0
    #   with:
    #     payload: |
    #       {
    #         "text": "✅ Build succeeded for ${{ github.repository }}",
    #         "blocks": [
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "✅ Build *succeeded* for ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}"
    #             }
    #           }
    #         ]
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    # - name: Notify Slack on Failure
    #   if: failure()
    #   uses: slackapi/slack-github-action@v1.27.0
    #   with:
    #     payload: |
    #       {
    #         "text": "❌ Build failed for ${{ github.repository }}",
    #         "blocks": [
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "❌ Build *failed* for ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View build details>"
    #             }
    #           }
    #         ]
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


    