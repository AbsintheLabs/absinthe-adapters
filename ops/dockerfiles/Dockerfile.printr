FROM node:20-slim AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Copy workspace files needed for dependency resolution
FROM base AS deps
WORKDIR /app
COPY pnpm-lock.yaml pnpm-workspace.yaml package.json ./
COPY tsconfig.base.json ./
COPY packages/common/package.json ./packages/common/
COPY packages/common/tsconfig.json ./packages/common/
COPY projects/printr/package.json ./projects/printr/
COPY projects/printr/tsconfig.json ./projects/printr/

# Install all dependencies (including workspace deps)
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --no-frozen-lockfile

# Build stage - build common package and current project
FROM base AS build
WORKDIR /app
COPY pnpm-lock.yaml pnpm-workspace.yaml package.json ./
COPY tsconfig.base.json ./
COPY packages/ ./packages/
COPY projects/printr/ ./projects/printr/

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/packages/common/node_modules ./packages/common/node_modules
COPY --from=deps /app/projects/printr/node_modules ./projects/printr/node_modules

# Generate TypeScript clients for common package ABIs
WORKDIR /app/packages/common
RUN pnpm squid-evm-typegen ./src/abi/ abi/*.json

WORKDIR /app/projects/printr
RUN pnpm squid-evm-typegen ./src/abi/ abi/*.json
RUN pnpm squid-typeorm-codegen

# Build the common package first, then printr
WORKDIR /app
RUN pnpm --filter @absinthe/common build
RUN pnpm --filter @absinthe/printr build

# Production stage
FROM base AS production
WORKDIR /app

# Copy only production dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/packages/common/node_modules ./packages/common/node_modules
COPY --from=deps /app/projects/printr/node_modules ./projects/printr/node_modules

# Copy built artifacts
COPY --from=build /app/packages/common/lib ./packages/common/lib
COPY --from=build /app/packages/common/package.json ./packages/common/
COPY --from=build /app/projects/printr/lib ./projects/printr/lib
COPY --from=build /app/projects/printr/package.json ./projects/printr/

# Copy source files needed for migrations
COPY --from=build /app/projects/printr/src ./projects/printr/src
COPY --from=build /app/projects/printr/schema.graphql ./projects/printr/
COPY --from=build /app/projects/printr/tsconfig.json ./projects/printr/

WORKDIR /app/projects/printr

# Use exec form and proper exit handling
CMD ["sh", "-c", "set -e; (pnpm migration:generate || echo 'No migration changes found'); pnpm migration:apply; exec node lib/main.js"]
